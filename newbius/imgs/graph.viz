digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] data.nebius_iam_v1_project.this (expand)" [label = "data.nebius_iam_v1_project.this", shape = "box"]
		"[root] data.nebius_vpc_v1_subnet.this (expand)" [label = "data.nebius_vpc_v1_subnet.this", shape = "box"]
		"[root] module.filestore.nebius_compute_v1_filesystem.controller_spool (expand)" [label = "module.filestore.nebius_compute_v1_filesystem.controller_spool", shape = "box"]
		"[root] module.filestore.nebius_compute_v1_filesystem.jail (expand)" [label = "module.filestore.nebius_compute_v1_filesystem.jail", shape = "box"]
		"[root] module.filestore.nebius_compute_v1_filesystem.jail_submount (expand)" [label = "module.filestore.nebius_compute_v1_filesystem.jail_submount", shape = "box"]
		"[root] module.k8s.nebius_compute_v1_gpu_cluster.this (expand)" [label = "module.k8s.nebius_compute_v1_gpu_cluster.this", shape = "box"]
		"[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)" [label = "module.k8s.nebius_mk8s_v1_cluster.this", shape = "box"]
		"[root] module.k8s.nebius_mk8s_v1_node_group.cpu (expand)" [label = "module.k8s.nebius_mk8s_v1_node_group.cpu", shape = "box"]
		"[root] module.k8s.nebius_mk8s_v1_node_group.gpu (expand)" [label = "module.k8s.nebius_mk8s_v1_node_group.gpu", shape = "box"]
		"[root] module.k8s.nebius_mk8s_v1_node_group.nlb (expand)" [label = "module.k8s.nebius_mk8s_v1_node_group.nlb", shape = "box"]
		"[root] module.k8s.nebius_vpc_v1_allocation.this (expand)" [label = "module.k8s.nebius_vpc_v1_allocation.this", shape = "box"]
		"[root] module.nvidia_operators.helm_release.gpu-operator (expand)" [label = "module.nvidia_operators.helm_release.gpu-operator", shape = "box"]
		"[root] module.nvidia_operators.helm_release.network_operator (expand)" [label = "module.nvidia_operators.helm_release.network_operator", shape = "box"]
		"[root] module.slurm.helm_release.slurm_cluster (expand)" [label = "module.slurm.helm_release.slurm_cluster", shape = "box"]
		"[root] module.slurm.helm_release.slurm_cluster_crd (expand)" [label = "module.slurm.helm_release.slurm_cluster_crd", shape = "box"]
		"[root] module.slurm.helm_release.slurm_cluster_storage (expand)" [label = "module.slurm.helm_release.slurm_cluster_storage", shape = "box"]
		"[root] module.slurm.helm_release.slurm_operator (expand)" [label = "module.slurm.helm_release.slurm_operator", shape = "box"]
		"[root] module.slurm.module.monitoring.helm_release.certificate_manager (expand)" [label = "module.slurm.module.monitoring.helm_release.certificate_manager", shape = "box"]
		"[root] module.slurm.module.monitoring.helm_release.dashboard (expand)" [label = "module.slurm.module.monitoring.helm_release.dashboard", shape = "box"]
		"[root] module.slurm.module.monitoring.helm_release.fb_logs_collector (expand)" [label = "module.slurm.module.monitoring.helm_release.fb_logs_collector", shape = "box"]
		"[root] module.slurm.module.monitoring.helm_release.prometheus_stack (expand)" [label = "module.slurm.module.monitoring.helm_release.prometheus_stack", shape = "box"]
		"[root] module.slurm.module.monitoring.helm_release.slurm_monitor (expand)" [label = "module.slurm.module.monitoring.helm_release.slurm_monitor", shape = "box"]
		"[root] module.slurm.module.monitoring.helm_release.vm_logs_server (expand)" [label = "module.slurm.module.monitoring.helm_release.vm_logs_server", shape = "box"]
		"[root] module.slurm.module.monitoring.helm_release.vm_operator (expand)" [label = "module.slurm.module.monitoring.helm_release.vm_operator", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/helm\"]" [label = "provider[\"registry.terraform.io/hashicorp/helm\"]", shape = "diamond"]
		"[root] provider[\"terraform-provider-nebius.storage.ai.nebius.cloud/nebius/nebius\"]" [label = "provider[\"terraform-provider-nebius.storage.ai.nebius.cloud/nebius/nebius\"]", shape = "diamond"]
		"[root] var.filestore_controller_spool" [label = "var.filestore_controller_spool", shape = "note"]
		"[root] var.filestore_jail" [label = "var.filestore_jail", shape = "note"]
		"[root] var.filestore_jail_submounts" [label = "var.filestore_jail_submounts", shape = "note"]
		"[root] var.iam_project_id" [label = "var.iam_project_id", shape = "note"]
		"[root] var.iam_token" [label = "var.iam_token", shape = "note"]
		"[root] var.k8s_cluster_name" [label = "var.k8s_cluster_name", shape = "note"]
		"[root] var.k8s_cluster_node_group_cpu" [label = "var.k8s_cluster_node_group_cpu", shape = "note"]
		"[root] var.k8s_cluster_node_group_gpu" [label = "var.k8s_cluster_node_group_gpu", shape = "note"]
		"[root] var.k8s_version" [label = "var.k8s_version", shape = "note"]
		"[root] var.nccl_benchmark_enable" [label = "var.nccl_benchmark_enable", shape = "note"]
		"[root] var.nccl_benchmark_min_threshold" [label = "var.nccl_benchmark_min_threshold", shape = "note"]
		"[root] var.nccl_benchmark_schedule" [label = "var.nccl_benchmark_schedule", shape = "note"]
		"[root] var.slurm_cluster_name" [label = "var.slurm_cluster_name", shape = "note"]
		"[root] var.slurm_login_node_port" [label = "var.slurm_login_node_port", shape = "note"]
		"[root] var.slurm_login_service_type" [label = "var.slurm_login_service_type", shape = "note"]
		"[root] var.slurm_login_ssh_root_public_keys" [label = "var.slurm_login_ssh_root_public_keys", shape = "note"]
		"[root] var.slurm_node_count" [label = "var.slurm_node_count", shape = "note"]
		"[root] var.slurm_operator_version" [label = "var.slurm_operator_version", shape = "note"]
		"[root] var.slurm_shared_memory_size_gibibytes" [label = "var.slurm_shared_memory_size_gibibytes", shape = "note"]
		"[root] var.telemetry_enable_otel_collector" [label = "var.telemetry_enable_otel_collector", shape = "note"]
		"[root] var.telemetry_enable_prometheus" [label = "var.telemetry_enable_prometheus", shape = "note"]
		"[root] var.telemetry_send_job_events" [label = "var.telemetry_send_job_events", shape = "note"]
		"[root] var.telemetry_send_otel_metrics" [label = "var.telemetry_send_otel_metrics", shape = "note"]
		"[root] var.vpc_subnet_id" [label = "var.vpc_subnet_id", shape = "note"]
		"[root] data.nebius_iam_v1_project.this (expand)" -> "[root] provider[\"terraform-provider-nebius.storage.ai.nebius.cloud/nebius/nebius\"]"
		"[root] data.nebius_iam_v1_project.this (expand)" -> "[root] var.iam_project_id (validation)"
		"[root] data.nebius_vpc_v1_subnet.this (expand)" -> "[root] provider[\"terraform-provider-nebius.storage.ai.nebius.cloud/nebius/nebius\"]"
		"[root] data.nebius_vpc_v1_subnet.this (expand)" -> "[root] var.vpc_subnet_id (validation)"
		"[root] local.create_nlb (expand)" -> "[root] var.slurm_login_service_type (validation)"
		"[root] module.filestore (close)" -> "[root] module.filestore.module.labels (close)"
		"[root] module.filestore (close)" -> "[root] module.filestore.output.controller_spool (expand)"
		"[root] module.filestore (close)" -> "[root] module.filestore.output.jail (expand)"
		"[root] module.filestore (close)" -> "[root] module.filestore.output.jail_submounts (expand)"
		"[root] module.filestore.local.const (expand)" -> "[root] module.filestore (expand)"
		"[root] module.filestore.local.name (expand)" -> "[root] module.filestore.local.const (expand)"
		"[root] module.filestore.local.name (expand)" -> "[root] module.filestore.var.jail_submounts (expand)"
		"[root] module.filestore.local.name (expand)" -> "[root] module.filestore.var.k8s_cluster_name (expand)"
		"[root] module.filestore.module.labels (close)" -> "[root] module.filestore.module.labels.output.key_k8s_cluster_id (expand)"
		"[root] module.filestore.module.labels (close)" -> "[root] module.filestore.module.labels.output.key_k8s_cluster_name (expand)"
		"[root] module.filestore.module.labels (close)" -> "[root] module.filestore.module.labels.output.key_slurm_cluster_name (expand)"
		"[root] module.filestore.module.labels (close)" -> "[root] module.filestore.module.labels.output.key_slurm_node_group_name (expand)"
		"[root] module.filestore.module.labels (close)" -> "[root] module.filestore.module.labels.output.label_group_name_cpu (expand)"
		"[root] module.filestore.module.labels (close)" -> "[root] module.filestore.module.labels.output.label_group_name_gpu (expand)"
		"[root] module.filestore.module.labels (close)" -> "[root] module.filestore.module.labels.output.label_group_name_nlb (expand)"
		"[root] module.filestore.module.labels (close)" -> "[root] module.filestore.module.labels.output.name_node_group_cpu (expand)"
		"[root] module.filestore.module.labels (close)" -> "[root] module.filestore.module.labels.output.name_node_group_gpu (expand)"
		"[root] module.filestore.module.labels (close)" -> "[root] module.filestore.module.labels.output.name_node_group_nlb (expand)"
		"[root] module.filestore.module.labels (expand)" -> "[root] module.filestore (expand)"
		"[root] module.filestore.module.labels.local.const (expand)" -> "[root] module.filestore.module.labels (expand)"
		"[root] module.filestore.module.labels.local.label (expand)" -> "[root] module.filestore.module.labels.local.label_key (expand)"
		"[root] module.filestore.module.labels.local.label_key (expand)" -> "[root] module.filestore.module.labels.local.const (expand)"
		"[root] module.filestore.module.labels.output.key_k8s_cluster_id (expand)" -> "[root] module.filestore.module.labels.local.label_key (expand)"
		"[root] module.filestore.module.labels.output.key_k8s_cluster_name (expand)" -> "[root] module.filestore.module.labels.local.label_key (expand)"
		"[root] module.filestore.module.labels.output.key_slurm_cluster_name (expand)" -> "[root] module.filestore.module.labels.local.label_key (expand)"
		"[root] module.filestore.module.labels.output.key_slurm_node_group_name (expand)" -> "[root] module.filestore.module.labels.local.label_key (expand)"
		"[root] module.filestore.module.labels.output.label_group_name_cpu (expand)" -> "[root] module.filestore.module.labels.local.label (expand)"
		"[root] module.filestore.module.labels.output.label_group_name_gpu (expand)" -> "[root] module.filestore.module.labels.local.label (expand)"
		"[root] module.filestore.module.labels.output.label_group_name_nlb (expand)" -> "[root] module.filestore.module.labels.local.label (expand)"
		"[root] module.filestore.module.labels.output.name_node_group_cpu (expand)" -> "[root] module.filestore.module.labels.local.const (expand)"
		"[root] module.filestore.module.labels.output.name_node_group_gpu (expand)" -> "[root] module.filestore.module.labels.local.const (expand)"
		"[root] module.filestore.module.labels.output.name_node_group_nlb (expand)" -> "[root] module.filestore.module.labels.local.const (expand)"
		"[root] module.filestore.nebius_compute_v1_filesystem.controller_spool (expand)" -> "[root] module.filestore.local.name (expand)"
		"[root] module.filestore.nebius_compute_v1_filesystem.controller_spool (expand)" -> "[root] module.filestore.var.controller_spool (expand)"
		"[root] module.filestore.nebius_compute_v1_filesystem.controller_spool (expand)" -> "[root] module.filestore.var.iam_project_id (expand)"
		"[root] module.filestore.nebius_compute_v1_filesystem.jail (expand)" -> "[root] module.filestore.local.name (expand)"
		"[root] module.filestore.nebius_compute_v1_filesystem.jail (expand)" -> "[root] module.filestore.var.iam_project_id (expand)"
		"[root] module.filestore.nebius_compute_v1_filesystem.jail (expand)" -> "[root] module.filestore.var.jail (expand)"
		"[root] module.filestore.nebius_compute_v1_filesystem.jail_submount (expand)" -> "[root] module.filestore.local.name (expand)"
		"[root] module.filestore.nebius_compute_v1_filesystem.jail_submount (expand)" -> "[root] module.filestore.var.iam_project_id (expand)"
		"[root] module.filestore.output.controller_spool (expand)" -> "[root] module.filestore.nebius_compute_v1_filesystem.controller_spool (expand)"
		"[root] module.filestore.output.jail (expand)" -> "[root] module.filestore.nebius_compute_v1_filesystem.jail (expand)"
		"[root] module.filestore.output.jail_submounts (expand)" -> "[root] module.filestore.nebius_compute_v1_filesystem.jail_submount (expand)"
		"[root] module.filestore.var.controller_spool (expand)" -> "[root] module.filestore (expand)"
		"[root] module.filestore.var.controller_spool (expand)" -> "[root] var.filestore_controller_spool"
		"[root] module.filestore.var.iam_project_id (expand)" -> "[root] data.nebius_iam_v1_project.this (expand)"
		"[root] module.filestore.var.iam_project_id (expand)" -> "[root] module.filestore (expand)"
		"[root] module.filestore.var.jail (expand)" -> "[root] module.filestore (expand)"
		"[root] module.filestore.var.jail (expand)" -> "[root] var.filestore_jail"
		"[root] module.filestore.var.jail_submounts (expand)" -> "[root] module.filestore (expand)"
		"[root] module.filestore.var.jail_submounts (expand)" -> "[root] var.filestore_jail_submounts"
		"[root] module.filestore.var.k8s_cluster_name (expand)" -> "[root] module.filestore (expand)"
		"[root] module.filestore.var.k8s_cluster_name (expand)" -> "[root] var.k8s_cluster_name (validation)"
		"[root] module.k8s (close)" -> "[root] module.k8s.module.labels (close)"
		"[root] module.k8s (close)" -> "[root] module.k8s.nebius_mk8s_v1_node_group.cpu (expand)"
		"[root] module.k8s (close)" -> "[root] module.k8s.nebius_mk8s_v1_node_group.gpu (expand)"
		"[root] module.k8s (close)" -> "[root] module.k8s.nebius_mk8s_v1_node_group.nlb (expand)"
		"[root] module.k8s (close)" -> "[root] module.k8s.output.control_plane (expand)"
		"[root] module.k8s (close)" -> "[root] module.k8s.output.login_ip (expand)"
		"[root] module.k8s (expand)" -> "[root] module.filestore (close)"
		"[root] module.k8s.local.gpu (expand)" -> "[root] module.k8s.var.name (expand)"
		"[root] module.k8s.local.gpu (expand)" -> "[root] module.k8s.var.node_group_gpu (expand)"
		"[root] module.k8s.local.login_ip (expand)" -> "[root] module.k8s.nebius_vpc_v1_allocation.this (expand)"
		"[root] module.k8s.module.labels (close)" -> "[root] module.k8s.module.labels.output.key_k8s_cluster_id (expand)"
		"[root] module.k8s.module.labels (close)" -> "[root] module.k8s.module.labels.output.key_k8s_cluster_name (expand)"
		"[root] module.k8s.module.labels (close)" -> "[root] module.k8s.module.labels.output.key_slurm_cluster_name (expand)"
		"[root] module.k8s.module.labels (close)" -> "[root] module.k8s.module.labels.output.key_slurm_node_group_name (expand)"
		"[root] module.k8s.module.labels (close)" -> "[root] module.k8s.module.labels.output.label_group_name_cpu (expand)"
		"[root] module.k8s.module.labels (close)" -> "[root] module.k8s.module.labels.output.label_group_name_gpu (expand)"
		"[root] module.k8s.module.labels (close)" -> "[root] module.k8s.module.labels.output.label_group_name_nlb (expand)"
		"[root] module.k8s.module.labels (close)" -> "[root] module.k8s.module.labels.output.name_node_group_cpu (expand)"
		"[root] module.k8s.module.labels (close)" -> "[root] module.k8s.module.labels.output.name_node_group_gpu (expand)"
		"[root] module.k8s.module.labels (close)" -> "[root] module.k8s.module.labels.output.name_node_group_nlb (expand)"
		"[root] module.k8s.module.labels (expand)" -> "[root] module.k8s (expand)"
		"[root] module.k8s.module.labels.local.const (expand)" -> "[root] module.k8s.module.labels (expand)"
		"[root] module.k8s.module.labels.local.label (expand)" -> "[root] module.k8s.module.labels.local.label_key (expand)"
		"[root] module.k8s.module.labels.local.label_key (expand)" -> "[root] module.k8s.module.labels.local.const (expand)"
		"[root] module.k8s.module.labels.output.key_k8s_cluster_id (expand)" -> "[root] module.k8s.module.labels.local.label_key (expand)"
		"[root] module.k8s.module.labels.output.key_k8s_cluster_name (expand)" -> "[root] module.k8s.module.labels.local.label_key (expand)"
		"[root] module.k8s.module.labels.output.key_slurm_cluster_name (expand)" -> "[root] module.k8s.module.labels.local.label_key (expand)"
		"[root] module.k8s.module.labels.output.key_slurm_node_group_name (expand)" -> "[root] module.k8s.module.labels.local.label_key (expand)"
		"[root] module.k8s.module.labels.output.label_group_name_cpu (expand)" -> "[root] module.k8s.module.labels.local.label (expand)"
		"[root] module.k8s.module.labels.output.label_group_name_gpu (expand)" -> "[root] module.k8s.module.labels.local.label (expand)"
		"[root] module.k8s.module.labels.output.label_group_name_nlb (expand)" -> "[root] module.k8s.module.labels.local.label (expand)"
		"[root] module.k8s.module.labels.output.name_node_group_cpu (expand)" -> "[root] module.k8s.module.labels.local.const (expand)"
		"[root] module.k8s.module.labels.output.name_node_group_gpu (expand)" -> "[root] module.k8s.module.labels.local.const (expand)"
		"[root] module.k8s.module.labels.output.name_node_group_nlb (expand)" -> "[root] module.k8s.module.labels.local.const (expand)"
		"[root] module.k8s.nebius_compute_v1_gpu_cluster.this (expand)" -> "[root] module.k8s.local.gpu (expand)"
		"[root] module.k8s.nebius_compute_v1_gpu_cluster.this (expand)" -> "[root] module.k8s.var.iam_project_id (expand)"
		"[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)" -> "[root] module.k8s.var.etcd_cluster_size (expand)"
		"[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)" -> "[root] module.k8s.var.iam_project_id (expand)"
		"[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)" -> "[root] module.k8s.var.k8s_version (expand)"
		"[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)" -> "[root] module.k8s.var.name (expand)"
		"[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)" -> "[root] module.k8s.var.vpc_subnet_id (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.cpu (expand)" -> "[root] module.k8s.module.labels.output.label_group_name_cpu (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.cpu (expand)" -> "[root] module.k8s.module.labels.output.name_node_group_cpu (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.cpu (expand)" -> "[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.cpu (expand)" -> "[root] module.k8s.var.filestores (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.cpu (expand)" -> "[root] module.k8s.var.node_group_cpu (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.gpu (expand)" -> "[root] module.k8s.module.labels.output.label_group_name_gpu (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.gpu (expand)" -> "[root] module.k8s.module.labels.output.name_node_group_gpu (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.gpu (expand)" -> "[root] module.k8s.nebius_compute_v1_gpu_cluster.this (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.gpu (expand)" -> "[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.gpu (expand)" -> "[root] module.k8s.var.filestores (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.nlb (expand)" -> "[root] module.k8s.module.labels.output.label_group_name_nlb (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.nlb (expand)" -> "[root] module.k8s.module.labels.output.name_node_group_nlb (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.nlb (expand)" -> "[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)"
		"[root] module.k8s.nebius_mk8s_v1_node_group.nlb (expand)" -> "[root] module.k8s.var.create_nlb (expand)"
		"[root] module.k8s.nebius_vpc_v1_allocation.this (expand)" -> "[root] module.k8s.module.labels.output.key_k8s_cluster_id (expand)"
		"[root] module.k8s.nebius_vpc_v1_allocation.this (expand)" -> "[root] module.k8s.module.labels.output.key_k8s_cluster_name (expand)"
		"[root] module.k8s.nebius_vpc_v1_allocation.this (expand)" -> "[root] module.k8s.module.labels.output.key_slurm_cluster_name (expand)"
		"[root] module.k8s.nebius_vpc_v1_allocation.this (expand)" -> "[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)"
		"[root] module.k8s.nebius_vpc_v1_allocation.this (expand)" -> "[root] module.k8s.var.create_nlb (expand)"
		"[root] module.k8s.nebius_vpc_v1_allocation.this (expand)" -> "[root] module.k8s.var.slurm_cluster_name (expand)"
		"[root] module.k8s.output.control_plane (expand)" -> "[root] module.k8s.nebius_mk8s_v1_cluster.this (expand)"
		"[root] module.k8s.output.login_ip (expand)" -> "[root] module.k8s.local.login_ip (expand)"
		"[root] module.k8s.var.create_nlb (expand)" -> "[root] local.create_nlb (expand)"
		"[root] module.k8s.var.create_nlb (expand)" -> "[root] module.k8s (expand)"
		"[root] module.k8s.var.etcd_cluster_size (expand)" -> "[root] module.k8s (expand)"
		"[root] module.k8s.var.filestores (expand)" -> "[root] module.k8s (expand)"
		"[root] module.k8s.var.iam_project_id (expand)" -> "[root] module.k8s (expand)"
		"[root] module.k8s.var.k8s_version (expand)" -> "[root] module.k8s (expand)"
		"[root] module.k8s.var.name (expand)" -> "[root] module.k8s (expand)"
		"[root] module.k8s.var.node_group_cpu (expand)" -> "[root] module.k8s (expand)"
		"[root] module.k8s.var.node_group_cpu (expand)" -> "[root] var.k8s_cluster_node_group_cpu"
		"[root] module.k8s.var.node_group_cpu (expand)" -> "[root] var.slurm_node_count"
		"[root] module.k8s.var.node_group_gpu (expand)" -> "[root] module.k8s (expand)"
		"[root] module.k8s.var.node_group_gpu (expand)" -> "[root] var.k8s_cluster_node_group_gpu (validation)"
		"[root] module.k8s.var.node_group_gpu (expand)" -> "[root] var.slurm_node_count"
		"[root] module.k8s.var.slurm_cluster_name (expand)" -> "[root] module.k8s (expand)"
		"[root] module.k8s.var.slurm_cluster_name (expand)" -> "[root] var.slurm_cluster_name (validation)"
		"[root] module.k8s.var.vpc_subnet_id (expand)" -> "[root] data.nebius_vpc_v1_subnet.this (expand)"
		"[root] module.k8s.var.vpc_subnet_id (expand)" -> "[root] module.k8s (expand)"
		"[root] module.nvidia_operators (close)" -> "[root] module.nvidia_operators.helm_release.gpu-operator (expand)"
		"[root] module.nvidia_operators (expand)" -> "[root] module.k8s (close)"
		"[root] module.nvidia_operators.helm_release.gpu-operator (expand)" -> "[root] module.nvidia_operators.helm_release.network_operator (expand)"
		"[root] module.nvidia_operators.helm_release.network_operator (expand)" -> "[root] module.nvidia_operators.local.helm (expand)"
		"[root] module.nvidia_operators.helm_release.network_operator (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/helm\"]"
		"[root] module.nvidia_operators.local.helm (expand)" -> "[root] module.nvidia_operators (expand)"
		"[root] module.slurm (close)" -> "[root] module.slurm.helm_release.slurm_cluster (expand)"
		"[root] module.slurm (close)" -> "[root] module.slurm.module.labels (close)"
		"[root] module.slurm (close)" -> "[root] module.slurm.module.monitoring (close)"
		"[root] module.slurm (expand)" -> "[root] module.k8s (close)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.helm_release.slurm_cluster_storage (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.helm_release.slurm_operator (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.login_load_balancer_ip (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.login_node_port (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.login_service_type (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.login_ssh_root_public_keys (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.nccl_benchmark_enable (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.nccl_benchmark_min_threshold (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.nccl_benchmark_schedule (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.nccl_topology_type (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.node_count (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.shared_memory_size_gibibytes (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.telemetry_enable_otel_collector (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.telemetry_enable_prometheus (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.telemetry_send_job_events (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.telemetry_send_otel_metrics (expand)"
		"[root] module.slurm.helm_release.slurm_cluster (expand)" -> "[root] module.slurm.var.worker_resources (expand)"
		"[root] module.slurm.helm_release.slurm_cluster_crd (expand)" -> "[root] module.slurm.local.helm (expand)"
		"[root] module.slurm.helm_release.slurm_cluster_crd (expand)" -> "[root] module.slurm.var.operator_version (expand)"
		"[root] module.slurm.helm_release.slurm_cluster_crd (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/helm\"]"
		"[root] module.slurm.helm_release.slurm_cluster_storage (expand)" -> "[root] module.slurm.local.helm (expand)"
		"[root] module.slurm.helm_release.slurm_cluster_storage (expand)" -> "[root] module.slurm.module.labels.output.key_slurm_node_group_name (expand)"
		"[root] module.slurm.helm_release.slurm_cluster_storage (expand)" -> "[root] module.slurm.module.labels.output.name_node_group_cpu (expand)"
		"[root] module.slurm.helm_release.slurm_cluster_storage (expand)" -> "[root] module.slurm.module.labels.output.name_node_group_gpu (expand)"
		"[root] module.slurm.helm_release.slurm_cluster_storage (expand)" -> "[root] module.slurm.var.filestores (expand)"
		"[root] module.slurm.helm_release.slurm_cluster_storage (expand)" -> "[root] module.slurm.var.name (expand)"
		"[root] module.slurm.helm_release.slurm_cluster_storage (expand)" -> "[root] module.slurm.var.operator_version (expand)"
		"[root] module.slurm.helm_release.slurm_cluster_storage (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/helm\"]"
		"[root] module.slurm.helm_release.slurm_operator (expand)" -> "[root] module.slurm.helm_release.slurm_cluster_crd (expand)"
		"[root] module.slurm.local.helm (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.module.labels (close)" -> "[root] module.slurm.module.labels.output.key_k8s_cluster_id (expand)"
		"[root] module.slurm.module.labels (close)" -> "[root] module.slurm.module.labels.output.key_k8s_cluster_name (expand)"
		"[root] module.slurm.module.labels (close)" -> "[root] module.slurm.module.labels.output.key_slurm_cluster_name (expand)"
		"[root] module.slurm.module.labels (close)" -> "[root] module.slurm.module.labels.output.key_slurm_node_group_name (expand)"
		"[root] module.slurm.module.labels (close)" -> "[root] module.slurm.module.labels.output.label_group_name_cpu (expand)"
		"[root] module.slurm.module.labels (close)" -> "[root] module.slurm.module.labels.output.label_group_name_gpu (expand)"
		"[root] module.slurm.module.labels (close)" -> "[root] module.slurm.module.labels.output.label_group_name_nlb (expand)"
		"[root] module.slurm.module.labels (close)" -> "[root] module.slurm.module.labels.output.name_node_group_cpu (expand)"
		"[root] module.slurm.module.labels (close)" -> "[root] module.slurm.module.labels.output.name_node_group_gpu (expand)"
		"[root] module.slurm.module.labels (close)" -> "[root] module.slurm.module.labels.output.name_node_group_nlb (expand)"
		"[root] module.slurm.module.labels (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.module.labels.local.const (expand)" -> "[root] module.slurm.module.labels (expand)"
		"[root] module.slurm.module.labels.local.label (expand)" -> "[root] module.slurm.module.labels.local.label_key (expand)"
		"[root] module.slurm.module.labels.local.label_key (expand)" -> "[root] module.slurm.module.labels.local.const (expand)"
		"[root] module.slurm.module.labels.output.key_k8s_cluster_id (expand)" -> "[root] module.slurm.module.labels.local.label_key (expand)"
		"[root] module.slurm.module.labels.output.key_k8s_cluster_name (expand)" -> "[root] module.slurm.module.labels.local.label_key (expand)"
		"[root] module.slurm.module.labels.output.key_slurm_cluster_name (expand)" -> "[root] module.slurm.module.labels.local.label_key (expand)"
		"[root] module.slurm.module.labels.output.key_slurm_node_group_name (expand)" -> "[root] module.slurm.module.labels.local.label_key (expand)"
		"[root] module.slurm.module.labels.output.label_group_name_cpu (expand)" -> "[root] module.slurm.module.labels.local.label (expand)"
		"[root] module.slurm.module.labels.output.label_group_name_gpu (expand)" -> "[root] module.slurm.module.labels.local.label (expand)"
		"[root] module.slurm.module.labels.output.label_group_name_nlb (expand)" -> "[root] module.slurm.module.labels.local.label (expand)"
		"[root] module.slurm.module.labels.output.name_node_group_cpu (expand)" -> "[root] module.slurm.module.labels.local.const (expand)"
		"[root] module.slurm.module.labels.output.name_node_group_gpu (expand)" -> "[root] module.slurm.module.labels.local.const (expand)"
		"[root] module.slurm.module.labels.output.name_node_group_nlb (expand)" -> "[root] module.slurm.module.labels.local.const (expand)"
		"[root] module.slurm.module.monitoring (close)" -> "[root] module.slurm.module.monitoring.helm_release.dashboard (expand)"
		"[root] module.slurm.module.monitoring (close)" -> "[root] module.slurm.module.monitoring.helm_release.slurm_monitor (expand)"
		"[root] module.slurm.module.monitoring (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.module.monitoring.helm_release.certificate_manager (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.helm_release.certificate_manager (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/helm\"]"
		"[root] module.slurm.module.monitoring.helm_release.dashboard (expand)" -> "[root] module.slurm.module.monitoring.helm_release.fb_logs_collector (expand)"
		"[root] module.slurm.module.monitoring.helm_release.dashboard (expand)" -> "[root] module.slurm.module.monitoring.var.slurm_cluster_name (expand)"
		"[root] module.slurm.module.monitoring.helm_release.fb_logs_collector (expand)" -> "[root] module.slurm.module.monitoring.helm_release.vm_logs_server (expand)"
		"[root] module.slurm.module.monitoring.helm_release.fb_logs_collector (expand)" -> "[root] module.slurm.module.monitoring.var.resources_fb_logs_collector (expand)"
		"[root] module.slurm.module.monitoring.helm_release.prometheus_stack (expand)" -> "[root] module.slurm.module.monitoring.helm_release.certificate_manager (expand)"
		"[root] module.slurm.module.monitoring.helm_release.prometheus_stack (expand)" -> "[root] module.slurm.module.monitoring.local.otel_collector (expand)"
		"[root] module.slurm.module.monitoring.helm_release.slurm_monitor (expand)" -> "[root] module.slurm.module.monitoring.helm_release.vm_operator (expand)"
		"[root] module.slurm.module.monitoring.helm_release.slurm_monitor (expand)" -> "[root] module.slurm.module.monitoring.var.create_pvcs (expand)"
		"[root] module.slurm.module.monitoring.helm_release.slurm_monitor (expand)" -> "[root] module.slurm.module.monitoring.var.resources_vm_agent (expand)"
		"[root] module.slurm.module.monitoring.helm_release.slurm_monitor (expand)" -> "[root] module.slurm.module.monitoring.var.resources_vm_single (expand)"
		"[root] module.slurm.module.monitoring.helm_release.vm_logs_server (expand)" -> "[root] module.slurm.module.monitoring.helm_release.vm_operator (expand)"
		"[root] module.slurm.module.monitoring.helm_release.vm_logs_server (expand)" -> "[root] module.slurm.module.monitoring.local.vm_logs_server (expand)"
		"[root] module.slurm.module.monitoring.helm_release.vm_logs_server (expand)" -> "[root] module.slurm.module.monitoring.var.create_pvcs (expand)"
		"[root] module.slurm.module.monitoring.helm_release.vm_logs_server (expand)" -> "[root] module.slurm.module.monitoring.var.resources_vm_logs_server (expand)"
		"[root] module.slurm.module.monitoring.helm_release.vm_operator (expand)" -> "[root] module.slurm.module.monitoring.helm_release.prometheus_stack (expand)"
		"[root] module.slurm.module.monitoring.helm_release.vm_operator (expand)" -> "[root] module.slurm.module.monitoring.local.repository (expand)"
		"[root] module.slurm.module.monitoring.helm_release.vm_operator (expand)" -> "[root] module.slurm.module.monitoring.var.resources_vm_operator (expand)"
		"[root] module.slurm.module.monitoring.local.namespace (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.local.otel_collector (expand)" -> "[root] module.slurm.module.monitoring.local.namespace (expand)"
		"[root] module.slurm.module.monitoring.local.repository (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.local.vm_logs_server (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.var.create_pvcs (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.var.resources_fb_logs_collector (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.var.resources_vm_agent (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.var.resources_vm_logs_server (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.var.resources_vm_operator (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.var.resources_vm_single (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.var.slurm_cluster_name (expand)" -> "[root] module.slurm.module.monitoring (expand)"
		"[root] module.slurm.module.monitoring.var.slurm_cluster_name (expand)" -> "[root] module.slurm.var.name (expand)"
		"[root] module.slurm.var.filestores (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.login_load_balancer_ip (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.login_node_port (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.login_node_port (expand)" -> "[root] var.slurm_login_node_port (validation)"
		"[root] module.slurm.var.login_service_type (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.login_ssh_root_public_keys (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.login_ssh_root_public_keys (expand)" -> "[root] var.slurm_login_ssh_root_public_keys"
		"[root] module.slurm.var.name (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.nccl_benchmark_enable (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.nccl_benchmark_enable (expand)" -> "[root] var.nccl_benchmark_enable"
		"[root] module.slurm.var.nccl_benchmark_min_threshold (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.nccl_benchmark_min_threshold (expand)" -> "[root] var.nccl_benchmark_min_threshold"
		"[root] module.slurm.var.nccl_benchmark_schedule (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.nccl_benchmark_schedule (expand)" -> "[root] var.nccl_benchmark_schedule"
		"[root] module.slurm.var.nccl_topology_type (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.node_count (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.operator_version (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.operator_version (expand)" -> "[root] var.slurm_operator_version"
		"[root] module.slurm.var.shared_memory_size_gibibytes (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.telemetry_enable_otel_collector (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.telemetry_enable_otel_collector (expand)" -> "[root] var.telemetry_enable_otel_collector"
		"[root] module.slurm.var.telemetry_enable_prometheus (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.telemetry_enable_prometheus (expand)" -> "[root] var.telemetry_enable_prometheus"
		"[root] module.slurm.var.telemetry_send_job_events (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.telemetry_send_job_events (expand)" -> "[root] var.telemetry_send_job_events"
		"[root] module.slurm.var.telemetry_send_otel_metrics (expand)" -> "[root] module.slurm (expand)"
		"[root] module.slurm.var.telemetry_send_otel_metrics (expand)" -> "[root] var.telemetry_send_otel_metrics"
		"[root] module.slurm.var.worker_resources (expand)" -> "[root] module.slurm (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/helm\"] (close)" -> "[root] module.nvidia_operators.helm_release.gpu-operator (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/helm\"] (close)" -> "[root] module.slurm.helm_release.slurm_cluster (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/helm\"] (close)" -> "[root] module.slurm.module.monitoring.helm_release.dashboard (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/helm\"] (close)" -> "[root] module.slurm.module.monitoring.helm_release.slurm_monitor (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/helm\"]" -> "[root] module.k8s.output.control_plane (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/helm\"]" -> "[root] var.iam_token"
		"[root] provider[\"terraform-provider-nebius.storage.ai.nebius.cloud/nebius/nebius\"] (close)" -> "[root] module.k8s.nebius_mk8s_v1_node_group.cpu (expand)"
		"[root] provider[\"terraform-provider-nebius.storage.ai.nebius.cloud/nebius/nebius\"] (close)" -> "[root] module.k8s.nebius_mk8s_v1_node_group.gpu (expand)"
		"[root] provider[\"terraform-provider-nebius.storage.ai.nebius.cloud/nebius/nebius\"] (close)" -> "[root] module.k8s.nebius_mk8s_v1_node_group.nlb (expand)"
		"[root] provider[\"terraform-provider-nebius.storage.ai.nebius.cloud/nebius/nebius\"] (close)" -> "[root] module.k8s.nebius_vpc_v1_allocation.this (expand)"
		"[root] root" -> "[root] module.nvidia_operators (close)"
		"[root] root" -> "[root] module.slurm (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/helm\"] (close)"
		"[root] root" -> "[root] provider[\"terraform-provider-nebius.storage.ai.nebius.cloud/nebius/nebius\"] (close)"
		"[root] root" -> "[root] var.k8s_version (validation)"
		"[root] root" -> "[root] var.slurm_shared_memory_size_gibibytes"
		"[root] var.iam_project_id (validation)" -> "[root] var.iam_project_id"
		"[root] var.k8s_cluster_name (validation)" -> "[root] var.k8s_cluster_name"
		"[root] var.k8s_cluster_node_group_gpu (validation)" -> "[root] var.k8s_cluster_node_group_gpu"
		"[root] var.k8s_version (validation)" -> "[root] var.k8s_version"
		"[root] var.slurm_cluster_name (validation)" -> "[root] var.slurm_cluster_name"
		"[root] var.slurm_login_node_port (validation)" -> "[root] var.slurm_login_node_port"
		"[root] var.slurm_login_service_type (validation)" -> "[root] var.slurm_login_service_type"
		"[root] var.vpc_subnet_id (validation)" -> "[root] var.vpc_subnet_id"
	}
}
